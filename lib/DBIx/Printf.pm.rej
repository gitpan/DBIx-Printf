--- lib/DBIx/Printf.pm (revision 38723)
+++ lib/DBIx/Printf.pm (working copy)
@@ -9,14 +9,16 @@
 our $VERSION = '0.07';
 
 sub _printf {
-    my ($dbh, $fmt, $params, $in_like) = @_;
+    my ($dbh, $fmt, $params, $in_like, $like_escape) = @_;
 
-    $fmt =~ s/\%(?:([dfst\%])|like\((.*?)\))/
+    $fmt =~ s/\%(?:([dfst\%])|like\((.*?)\)((?i)\s+ESCAPE\s+(['"])(.*?)\4(?:\s+|$))?)/
         _printf_quote({
             dbh      => $dbh,
             params   => $params,
             type     => $1 || 'like',
             like_fmt => $2,
+            like_escape => $3,
+            like_escape_char => defined $like_escape ? $like_escape : $5,
             in_like  => $in_like,
         })  
             /eg;
@@ -31,18 +33,18 @@
         return '%';
     } elsif ($in->{type} eq 'like') {
         return "'"
-            . _printf($in->{dbh}, $in->{like_fmt}, $in->{params}, 1)
-                . "'";
+            . _printf($in->{dbh}, $in->{like_fmt}, $in->{params}, 1, $in->{like_escape_char})
+                . "'" . ($in->{like_escape} || '')
     }
 
     return _printf_quote_simple(
-        $in->{dbh}, $in->{type}, $in->{params}, $in->{in_like}
+        $in->{dbh}, $in->{type}, $in->{params}, $in->{in_like}, $in->{like_escape_char}
     );
 }
 
 sub _printf_quote_simple {
     no warnings;
-    my ($dbh, $type, $params, $in_like) = @_;
+    my ($dbh, $type, $params, $in_like, $like_escape_char) = @_;
 
     Carp::Clan::croak "too few parameters\n" unless @$params;
     my $param = shift @$params;
